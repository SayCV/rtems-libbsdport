2011-07-20 Till Straumann <Till.Straumann@TU-Berlin.de>
	
	* if_em/Makefile.am, if_em/e1000_osdep.h, if_em/e1000_osdep.c,
	if_em/if_em.c: added e1000_osdep.c which implements all
	os-dependent parts in a bsdnet-agnostic fashion. Hence, the
	low-level driver can be used w/o bsdnet.
	FIXES: dependency on bsdnet initialization; PCI bus header
	was not initialized when not used via bsdnet (lanIpBasic driver
	crashed).

2010-07-23 Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/devicet.c: Initialize libbspExt.

2010-06-30  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/bus.h: PPC's inlines from libcpu/io.h still have
	un-intuitive argument types (e.g., unsigned instead of uint32_t).
	Added additional 'iotype' arg to BUS_SPACE_DECL macro (ppc only)
	so that we can cast to the correct type as expected by libcpu/io.h.
	Hopefully that doesn't bring us into C99 alias hell.

	* libbsdport/devicet.c: Silence compiler warnings by casting (char)
	argument passed to 'ctype.h' functions [toupper + friends] ->
	(unsigned char) as these functions expect 'int'.
	
2010-03-07  Till Straumann <Till.Straumann@TU-Berlin.de>

	* links.am: POSIXified sed commands for sake of portability.

2010-02-12  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/Makefile.am: Removed obsolete (and commented)
	stuff.

2009-10-20  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/libbsdport.h, if_em/e1000_osdep.h:
	We need __BSD_VISIBLE defined. Some things in the rtems headers
	changed with 4.10 (can't pinpoint the details). We now
	#define __INSIDE_RTEMS_BSD_TCPIP_STACK__ before explicitly
	including <rtems/rtems_bsdnet.h> and this seemed to fix
	things for 4.10.

2009-10-20  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/libbsdport_post.h: added missing declaration
	of m_defrag() (Chris replaced the dummy #define a while
	ago and provided an implementation instead [thanks!] but
	we also need a declaration).

2009-10-20  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/ifmedia.c: fixed 'unused variable' warning
	by removing unused var.

2009-10-20  Till Straumann <Till.Straumann@TU-Berlin.de>

	* if_re/if_re.c: fixed 'unused variable' warning by
	commenting via #ifndef __rtems__ (since code which uses
	the 'msi_disable' var is commented the same way).

2009-10-20  Till Straumann <Till.Straumann@TU-Berlin.de>

	* if_pcn/if_pcn.c: fixed 'type-punned pointer' warning.
	Use 'memcpy' to copy 2 bytes to a short. This requires
	another #ifdef __rtems__, however.

2009-10-20  Till Straumann <Till.Straumann@TU-Berlin.de>

	* if_bge/if_bge.c: bge_intr must be passed as a 'handler'
	to bus_setup_intr(). However, the irq_check_dis and irq_enable
	methods seem to still be skeletons so this driver won't work...
	(I have no hardware or emulation available to test).
	
2009-10-20	Joel Sherrill <joel.sherrill@OARcorp.com>

	* libbsdport/alldrv.c: Revert.

2009-10-20	Joel Sherrill <joel.sherrill@OARcorp.com>

	* if_bge/if_bge.c, libbsdport/alldrv.c: Add local changes (untested).

2009-09-12  Chris Johns <chrisj@rtems.org>

	* links.am: Fixed the links so they work with absolute paths.

2009-08-15  Till Straumann <Till.Straumann@TU-Berlin.de>

	* if_re/Makefile.am: added 'if_rlreg.h' to SOURCES so
	that it is 'distributed'.

2009-08-15  Till Straumann <Till.Straumann@TU-Berlin.de>

	* if_em/31000_osdep.h: added missing 'void' return
	type of __out_le32() inline function.

2009-08-06  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/rtems_callout.c: fixed possible race
	condition. callout_stop() must check again from
	critical/protected section of code if callout is still on
	the list/active. Otherwise, the callout-task could
	have executed and removed the callout between
	callout_stop() checking the p_prev pointer and
	entering the critical section.

2009-08-05  Till Straumann <Till.Straumann@TU-Berlin.de>

	* if_em/Makefile.am, if_em/e1000_osdep.h, if_em/if_em.c:
	Changed 'e1000_osdep.h' to provide stdalone I/O methods for
	select architectures (x86 and PPC -- others fall back on
	libbsdport/bus.h). This lets the low-level driver (everything
	except for 'if_em.c/if_em.h') API be independent of
	BSD networking and libbsdport which is desirable since
	certain applications may wish to just use the low-level
	API for implementing dedicated 'raw-ethernet' drivers
	for BSD-independent, proprietary GigE communication.

2009-08-05  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/alldrv.c: reactivate weak aliases for all
	known/supported drivers. This magic allows the user to
	just link the desired (sub-)set of drivers.

2009-08-05  Till Straumann <Till.Straumann@TU-Berlin.de>

	* libbsdport/libbsdport.h: define _KERNEL only if not defined already
	(e.g., from Makefile).

2009-06-04	Joel Sherrill <joel.sherrill@oarcorp.com>

	* libbsdport/alldrv.c, libbsdport/libbsdport_api.h: Add include
	<stdio.h> for FILE *.

	2009/05/12 (TS)
	- bugfix: bus_write_2() must map to bus_space_write_2 (not 4)
	2009/04/22 (TS)
	- imported SLAC version into OAR repository; added FXP driver.
	2008/03/22 (TS)
	- silence more compiler warnings:
	  * make DMA address void* instead of caddr_t to avoid strict-aliasing violation
	  * add dummy statement to silence 'unused variable' warning.
	- added header with RTEMS version checking macro. Unfortunately, many small
	  details of the RTEMS APIs change with versions :-( [e.g., changed type
	  from unsigned -> uint32_t in st_le32()]. Individual files can include
	  the new <rtems_verscheck.h> and test for RTEMS version to switch conditional
	  compilation (aaargh).
	- header clash; <queue.h> (and others) are present in newlib and in RTEMS/bsdnet
	  but they use a different multiple-inclusion guard :-(. Must pick the right one...
	2007/11/07 (TS)
	- added ChangeLog
	- moved arp_ifinit from libbsdport.h to libbsdport_post.h
	- replaced inport_xxx/outport_xxx by in_xxx/out_xxx and _IO_BASE
	- bookE has not mftb instruction :-( we must use mfspr
	  (but that wouldn't work on classic ppc if we were not
	  in supervisory mode).
	- type adaptions in libbsdport.h to protect us against
	  alias rule and to silence warnings.
